services:
  heavy-bridge:
    build:
      context: .
      dockerfile: Dockerfile
    image: heavy-agentkit-bridge:latest
    container_name: heavy-bridge
    restart: unless-stopped
    ports:
      - "8765:8765"
    volumes:
      - heavy_config:/home/heavy/config
      - heavy_wallets:/home/heavy/wallets
      - heavy_logs:/home/heavy/logs
    env_file:
      - .env.production
    environment:
      - HEAVY_ENCRYPTION_KEY=${HEAVY_ENCRYPTION_KEY:-}
      - CDP_API_KEY_NAME=${CDP_API_KEY_NAME:-}
      - CDP_API_KEY_PRIVATE_KEY=${CDP_API_KEY_PRIVATE_KEY:-}
      - NETWORK_ID=${NETWORK_ID:-base-sepolia}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; socket.socket().connect(('localhost', 8765))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - heavy-network

  # Optional: Monitoring service
  prometheus:
    image: prom/prometheus:latest
    container_name: heavy-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - heavy-network

  # Optional: Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: heavy-grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - heavy-network
    depends_on:
      - prometheus

volumes:
  heavy_config:
    driver: local
  heavy_wallets:
    driver: local
  heavy_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  heavy-network:
    driver: bridge 